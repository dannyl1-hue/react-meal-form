{"ast":null,"code":"var _jsxFileName = \"/Users/danielliang/Desktop/react_course/food-cart/src/Components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n\n  const isEmpty = input => {\n    return input.trim().length === 0;\n  };\n\n  const isFiveChars = input => {\n    return input.trim().length === 5;\n  };\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredCityIsValid && enteredPostalCodeIsValid && enteredStreetIsValid && enteredNameIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `${classes.control}  ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control}  ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control}  ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control}  ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"mZCsAtBIFQjke8GBuQYAXPOOADw=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useRef","useState","classes","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","isEmpty","input","trim","length","isFiveChars","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","value","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"sources":["/Users/danielliang/Desktop/react_course/food-cart/src/Components/Cart/Checkout.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const isEmpty = (input) => {\n    return input.trim().length === 0;\n  };\n\n  const isFiveChars = (input) => {\n    return input.trim().length === 5;\n  };\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid,\n    });\n\n    const formIsValid =\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid &&\n      enteredStreetIsValid &&\n      enteredNameIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `${classes.control}  ${\n    formInputsValidity.name ? \"\" : classes.invalid\n  }`;\n\n  const streetControlClasses = `${classes.control}  ${\n    formInputsValidity.street ? \"\" : classes.invalid\n  }`;\n\n  const cityControlClasses = `${classes.control}  ${\n    formInputsValidity.city ? \"\" : classes.invalid\n  }`;\n\n  const postalCodeControlClasses = `${classes.control}  ${\n    formInputsValidity.postalCode ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p>Please enter a valid postal code</p>\n        )}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}