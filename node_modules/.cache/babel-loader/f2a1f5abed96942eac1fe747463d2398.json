{"ast":null,"code":"var _jsxFileName = \"/Users/danielliang/Desktop/react_course/food-cart/src/Components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmitting, setDidSubmitting] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://food-app-ab173-default-rtdb.firebaseio.com/orders.json\", {\n      method: 'POST',\n      body: JSON.stringify({\n        userData: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"2bLJu3p6qGzTZJQTuVOmEmlH43k=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useContext","CartContext","CartItem","Modal","classes","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmitting","setDidSubmitting","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent"],"sources":["/Users/danielliang/Desktop/react_course/food-cart/src/Components/Cart/Cart.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmitting, setDidSubmitting] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async (userData) => {\n    setIsSubmitting(true);\n    await fetch(\"https://food-app-ab173-default-rtdb.firebaseio.com/orders.json\", {\n      method: 'POST', \n      body: JSON.stringify({\n        userData: userData, \n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = <React.Fragment></React.Fragment>\n\n  return (\n    <Modal onClose={props.onClose}>\n      \n    </Modal>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}